name: Building and pushing a docker image to Amazon ECR and deploying to Amazon ECS

on:
  push:
    tags:
      - v*

jobs:
  build-and-push:
    name: Building and pushing image to AWS ECR
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-southeast-2

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag and push the image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
      run: |
        IMAGE_TAG=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in AWS ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.AWS_ECR_REPOSITORY }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy AWS ECS task definition for resetCases
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: openlawnz-ecs-service
        cluster: resetCases
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseInvalidCharacters
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseInvalidCharacters
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseFootnotes
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseFootnotes
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseEmptyCitations
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseEmptyCitations
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseCourts
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseCourts
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseCaseToCase
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseCaseToCase
        wait-for-service-stability: true

    - name: Deploy AWS ECS task definition for parseLegislationToCases
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        services: openlawnz-ecs-service
        cluster: parseLegislationToCases
        wait-for-service-stability: true
